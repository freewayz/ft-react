// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`OptionsContainer Component TestCase renders the right snapshot 1`] = `
ShallowWrapper {
  "length": 1,
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__unrendered__): <Connect(OptionsContainer)
    options={
        Array [
            Object {
              "answer": "Answer 1",
              "feedback": "Feedback 1",
              "is_correct": false,
            },
            Object {
              "answer": "Answer 2",
              "feedback": "Feedback 2",
              "is_correct": true,
            },
          ]
    }
/>,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__node__): Object {
    "instance": null,
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "editOption": [Function],
      "options": Array [
        Object {
          "answer": "Answer 1",
          "feedback": "Feedback 1",
          "is_correct": false,
        },
        Object {
          "answer": "Answer 2",
          "feedback": "Feedback 2",
          "is_correct": true,
        },
      ],
      "removeOption": [Function],
    },
    "ref": null,
    "rendered": null,
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": null,
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "editOption": [Function],
        "options": Array [
          Object {
            "answer": "Answer 1",
            "feedback": "Feedback 1",
            "is_correct": false,
          },
          Object {
            "answer": "Answer 2",
            "feedback": "Feedback 2",
            "is_correct": true,
          },
        ],
        "removeOption": [Function],
      },
      "ref": null,
      "rendered": null,
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
      },
    },
    "context": Object {
      "store": Object {
        "clearActions": [Function],
        "dispatch": [Function],
        "getActions": [Function],
        "getState": [Function],
        "replaceReducer": [Function],
        "subscribe": [Function],
      },
    },
  },
}
`;
